version: '3'
services:
  node:
    image: lordrigar/node-graphql-app:latest
    volumes:
      - ./app/:/usr/src/app/
      - ./app/logs/:/usr/src/app/logs/
    env_file:
      - ./../.env
    working_dir: /usr/src
    command: npm run start
    ports:
      - '3000:3000'
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    deploy:
      replicas: 2
    networks:
      - web

  mongo1:
    hostname: mongo1
    image: mongo:4.0
    ports:
      - 27011:27017
    entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'rs0']
    networks:
      - web
  mongo2:
    hostname: mongo2
    image: mongo:4.0
    ports:
      - 27012:27017
    entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'rs0']
    networks:
      - web
  mongo3:
    hostname: mongo3
    image: mongo:4.0
    ports:
      - 27013:27017
    entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'rs0']
    networks:
      - web

networks:
  web:
    external:
      name: mynetwork
  # mongo1:
  #   hostname: mongo1
  #   image: mongo:4.0
  #   volumes:
  #     - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  #     - ./mongo1:/data/db
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: admin
  #     MONGO_INITDB_ROOT_PASSWORD: admin
  #     MONGO_INITDB_DATABASE: mymongo
  #   entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'rs0']
  # mongo2:
  #   hostname: mongo2
  #   image: mongo:4.0
  #   volumes:
  #     - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  #     - ./mongo2:/data/db
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: admin
  #     MONGO_INITDB_ROOT_PASSWORD: admin
  #     MONGO_INITDB_DATABASE: mymongo
  #   entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'rs0']
  # mongosetup:
  #   image: mongo:4.0
  #   links:
  #     - mongo1:mongo1
  #     - mongo2:mongo2
  #   depends_on:
  #     - mongo1
  #     - mongo2
  #   volumes:
  #     - .:/mongo
  #   restart: 'no'
  #   entrypoint: ['bash', '/mongo/mongo_setup.sh']
  # deploy:
  #   mode: replicated
  #   replicas: 2
  #   placement:
  #     constraints: [node.role == manager]
