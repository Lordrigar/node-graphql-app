name: Node-app CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    name: runs testing suite
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm test
  dockerhub:
    needs: test
    name: push to dockerhub registry
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: lordrigar/node-graphql-app
  deploy_swarm:
    needs: dockerhub
    name: Deploy swarm to DO
    runs-on: ubuntu-latest
    steps:
      - name: execute remote build script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{ secrets.PATH }} && ls -A1 | xargs rm -rf && git clone https://github.com/Lordrigar/node-graphql-app.git . && chmod +x ./../build_swarm.sh && ./../build_swarm.sh
  # deploy:
  #   needs: dockerhub
  #   name: Deploy to DO
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: execute remote build script
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USERNAME }}
  #         key: ${{ secrets.KEY }}
  #         port: ${{ secrets.PORT }}
  #         script: |
  #           cd ${{ secrets.PATH }} && ls -A1 | xargs rm -rf && git clone https://github.com/Lordrigar/node-graphql-app.git . && chmod +x ./build.sh && ./build.sh
